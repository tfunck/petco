#!/bin/bash
option=$1
cd /data1/projects/minc_helper/1.0; ./make; cd -;
basename="laplace_equation-1.0"

if [ -f $basename ]; then
    rm $basename
fi

src="${basename}.c"
options="-g -static -O0 -ffast-math  -std=c99 3x3-C/dsyevh3.c 3x3-C/dsyevd3.c 3x3-C/dsyevc3.c 3x3-C/dsyevq3.c 3x3-C/dsytrd3.c 3x3-C/dsyev2.c 3x3-C/slvsec3.c "
lib_dir="-L/data1/projects/minc-quarantine/install/lib/ -L/data1/projects/mycode-quarantine/5.15/lib"
lib="-lminc_helper -lminc2 -lhdf5 -lnetcdf -lm -lz -ldl"
include_dir="-I./ -I/data1/projects/minc-quarantine/install/include/ -I/data1/projects/mycode-quarantine/5.15/include/"

echo $src
gcc  $options  $src -o $basename $include_dir $lib_dir $lib ;


if [ "$?" != "0" ]; then
    exit 1
else
    cp $basename /data1/projects/mycode-quarantine/5.15/bin/
    ln -fs /data1/projects/mycode-quarantine/5.15/bin/${basename}  /data1/projects/mycode-quarantine/5.15/bin/anisotropic_diffusion
    #options="-linear"
	tol="0.000005"
    mask1=bigbrain/gm_1mm.mnc #srv_1.mnc 
    image1=bigbrain/image_1mm.mnc #noise.mnc 
    output=bigbrain/image_laplace_eq_${maxIterations}_1mm.mnc
    command="${basename} $tol $mask1 $image1 $output"  
    echo $command
    if [ "$option" == "-gdb" ]; then
        gdb --args $command
    elif [ "$option" == "-valgrind" ]; then
       valgrind --tool=memcheck --leak-check=yes  --leak-check=full $command
    elif [ "$option" == "-test" ]; then
        echo Nothing set
    else   
        echo " " 
        time $command
    fi
    s=2 
    mincmath -clob -mult $output gm.mnc layers.mnc
    for i in `seq 0 $s 8`; do 
        minccalc -clob -expression "if(A[0] >= $i && A[0] < ($i + $s) ) 1 else 0" layers.mnc layers_${s}_${i}.mnc; 
    done
    Display $output

fi



